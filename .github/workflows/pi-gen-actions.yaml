name: PiSdr GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  PiSdr-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Free space before pi-gen-action
        run: |
          echo "Free space:"
          df -h | grep -v tmpfs
      - name: Build using pi-gen-action
        uses: usimd/pi-gen-action@v1
        id: build
        with:
          compression: xz
          disable-first-boot-user-rename: 1
          enable-ssh: 1
          export-last-stage-only: true
          hostname: pi-sdr
          image-name: 'pi-sdr'
          increase-runner-disk-size: true
          keyboard-keymap: us
          keyboard-layout: English (US)
          locale: en_US.UTF-8
          timezone: US/Eastern
          username: pi
          password: 'pi'
          pi-gen-release: Pi-Sdr V7.0 Build Fixes Pi-Gen Actions Release
          # The release version to build images against. Valid values are jessie, stretch,
          # buster, bullseye, bookworm, and testing.
          release: bookworm
          # DC: Before we did not specify repo and did specify version 'arm64'
          # DC: Now we specify my repo and branch, hopefully it qualifies as a pi-gen fork.
          # pi-gen-version: arm64
          # GitHub repository to fetch pi-gen from, must be a fork from RPi-Distro/pi-gen.
          pi-gen-repository: n1ai/pisdr-image
          # Release version of pi-gen to use. This can both be a branch or tag name known in 
          # the pi-gen repository.
          pi-gen-version: pr-build-fixes
          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2 stage3 stage4
          # Comma or whitespace separated list of additional packages to install on host 
          # before running pi-gen. Use this list to add any packages your custom stages may 
          # require. Note that this is not affecting the final image. In order to add 
          # additional packages, you need to add a respective 'XX-packages' file in your 
          # custom stage.
          extra-host-dependencies: 'git'
          # Print all output from pi-gen.
          verbose-output: true
          # Wifi country code of default network to connect to.
          wpa-country: 'US'
          # SSID of a default wifi network to connect to.
          wpa-essid: ''
          # Password of default wifi network to connect to.
          wpa-password: ''
      - name: Free space after pi-gen-action
        run: |
          echo "Free space:"
          df -h | grep -v tmpfs
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Image path after pi-gen-action
        run: |
          echo "Image path:" ${{ steps.build.outputs.image-path }}
          ls -lR ${{ steps.build.outputs.image-path }} || true
      - name: Upload deploy area as artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.build.outputs.image-path }}
          if-no-files-found: error
          retention-days: 3
          compression-level: 0
          overwrite: true
          include-hidden-files: true          
      - run: echo "üçè This job's status is ${{ job.status }}."
