name: PiGen GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  PiGen-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Free space before pi-gen-action
        run: |
          echo "Free space:"
          df -h | grep -v tmpfs
      - name: Build using pi-gen-action
      - uses: usimd/pi-gen-action@v1
        with:
          compression: xz
          disable-first-boot-user-rename: 1
          enable-ssh: 1
          export-last-stage-only: true
          hostname: pgactions
          image-name: 'pgactions'
          increase-runner-disk-size: true
          keyboard-keymap: us
          keyboard-layout: English (US)
          locale: en_US.UTF-8
          timezone: America/New York
          username: pi
          password: 'pi'
          pi-gen-release: Pi-Gen Actions Release
          pi-gen-version: arm64
          # The release version to build images against. Valid values are jessie, stretch,
          # buster, bullseye, bookworm, and testing.
          release: bookworm
          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2
          # Print all output from pi-gen.
          verbose-output: true
          # Wifi country code of default network to connect to.
          wpa-country: 'US'
          # SSID of a default wifi network to connect to.
          wpa-essid: ''
          # Password of default wifi network to connect to.
          wpa-password: ''
      - name: Free space after pi-gen-action
        run: |
          echo "Free space:"
          df -h | grep -v tmpfs
      - run: echo "üçè This job's status is ${{ job.status }}."
